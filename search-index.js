var searchIndex = JSON.parse('{\
"rustyread":{"doc":"","t":[0,5,5,0,0,3,11,3,12,12,3,12,12,12,5,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,4,13,5,5,0,0,4,13,13,13,13,13,0,4,13,13,13,13,13,13,4,13,13,0,0,3,11,11,11,11,0,3,11,11,11,11,5,0,3,11,11,0,3,11,11,0,3,11,11,0,3,11,11,11,11,11,0,3,12,12,12,12,11,3,12,12,11,11,11,0,0,4,13,13,13,3,12,12,12,12,12,11,11,11,3,12,12,12,12,11,0,6,6,3,11,11,11,11,11,11,11,11,11,11,11,11,6,5,5,5,5,0,3,11,11,11,11,0,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["alignment","edit_distance","align","cli","simulate","Quantity","number_of_base","Duo","0","1","Trio","0","1","2","found_model","Command","reference_path","output_path","quantity","length","identity","error_model","qscore_model","seed","start_adapter","end_adapter","start_adapter_seq","end_adapter_seq","junk","random","chimera","glitches","small_plasmid_bias","nb_base_store","Command","subcmd","threads","verbosity","SubCommand","Simulate","i82level","set_nb_threads","error","cli","Cli","CantParseQuantity","CantParseDuo","CantParseTrio","CantFoundModelPath","SmallPlasmidBias","model","Model","ErrorParsing","QualityParsing","QualityNotMinimalCigarString","QualityCigarLenNotOdd","LengthParamMustBeUpperThan0","IdentityParamMustBeUpperThan0","Error","Cli","Model","model","adapter","Adapter","new","get_start","get_end","max_len","error","Error","from_stream","random","add_errors_to_kmer","k","random_error","glitch","Glitch","new","get_glitch","identity","Identity","new","get_identity","length","Length","new","get_length","quality","Quality","from_stream","random","ideal","get_qscore","max_k","references","Reference","id","seq","revcomp","circular","new","References","sequences","dist","from_stream","from_stream_adjusted_weight","choose_reference","simulate","description","ReadType","Real","Junk","Random","Origin","ref_id","strand","start","end","read_type","reference","junk","random","Description","origin","chimera","length","identity","new","error","Seq","Cigar","Change","new","from_seq","begin","end_raw","end_err","seq","cigar","edit","contain","overlap","merge","update_align","Changes","number_of_edit","sequence","add_glitches","add_error","fragments","Fragments","new","get_read_type","is_chimera","generate_fragment","quality","generate_quality","simulate","random_base","random_base_diff","random_seq","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","to_subset","is_in_subset","to_subset_unchecked","from_subset","from","from","next","clone","clone","clone","clone","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from_str","from_str","from_str","source","into_app","augment_clap","into_app","augment_clap","into_app","augment_clap","from_arg_matches","from_arg_matches","from_arg_matches","augment_subcommands","from_subcommand"],"q":["rustyread","rustyread::alignment","","rustyread","rustyread::cli","rustyread::cli::simulate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rustyread::cli","","","","","","","","rustyread","rustyread::error","rustyread::error::cli","","","","","","rustyread::error","rustyread::error::model","","","","","","","rustyread::error","","","rustyread","rustyread::model","rustyread::model::adapter","","","","","rustyread::model","rustyread::model::error","","","","","","rustyread::model","rustyread::model::glitch","","","rustyread::model","rustyread::model::identity","","","rustyread::model","rustyread::model::length","","","rustyread::model","rustyread::model::quality","","","","","","rustyread","rustyread::references","","","","","","","","","","","","rustyread","rustyread::simulate","rustyread::simulate::description","","","","","","","","","","","","","","","","","","","rustyread::simulate","rustyread::simulate::error","","","","","","","","","","","","","","","","","","","","rustyread::simulate","rustyread::simulate::fragments","","","","","rustyread::simulate","rustyread::simulate::quality","rustyread::simulate","rustyread","","","rustyread::cli::simulate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rustyread::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rustyread::error::cli","","","","","","","","","","","","","","","","","rustyread::error::model","","","","","","","","","","","","","","","","","rustyread::error","","","","","","","","","","","","","","","","","rustyread::model::adapter","","","","","","","","","","","","","","","","rustyread::model::error","","","","","","","","","","","","","","","","rustyread::model::glitch","","","","","","","","","","","","","","","","rustyread::model::identity","","","","","","","","","","","","","","","","rustyread::model::length","","","","","","","","","","","","","","","","rustyread::model::quality","","","","","","","","","","","","","","","","rustyread::references","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rustyread::simulate::description","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rustyread::simulate::error","","","","","","","","","","","","","","","","","","rustyread::simulate::fragments","","","","","","","","","","","","","","","","","rustyread::error","","rustyread::simulate::fragments","rustyread::simulate::description","","","rustyread::simulate::error","rustyread::cli::simulate","","","","","","rustyread::references","","rustyread::simulate::description","","","","","rustyread::simulate::error","","rustyread::cli::simulate","","","","rustyread::cli","","rustyread::error::cli","rustyread::error::model","rustyread::error","rustyread::model::identity","rustyread::references","rustyread::simulate::description","","","rustyread::simulate::error","rustyread::error::cli","rustyread::error::model","rustyread::error","rustyread::simulate::description","","rustyread::cli::simulate","","","rustyread::error","rustyread::cli::simulate","","rustyread::cli","","","","rustyread::cli::simulate","rustyread::cli","","",""],"d":["Function to align sequence","","","All stuff relate to command line","All stuff relate to simulate subcommand","Store quantity as coverage of number of base","Convert Quantity in a number of base, if base is set …","Store a pair of value, can be parse from str if it’s …","","","Store a trio of value, can be parse from str if it’s …","","","","Found path to model file","Struct use to parse simulate subcommand argument","Path to reference sequence in fasta format","Path to reference sequence in fasta format","Quantity of base rustyread have to generate","Read length distribution parameter","Identity distribution parameter","Error model used","Qualtity score model used","Seed used","Start adapter parameter","End adapter parameter","Start adapter sequence","End adapter sequence","Junk reads parameter","Random reads parameter","Chimera parameter","Glitches parameter","Small plasmid bias or not","Limit memory usage","","Subcommand call","Number of thread rustyread can use","Verbosity level","","","Convert verbosity level (number of v) is log::Level","set number of global rayon thread pool","All stuff relate to error","Command line interface error","Enum to manage error polymorphism","quantity didn’t match to pattern \\\\d+[KMGx]?","Cant parse a duo of value","Cant parse a trio of value","Cant found model path","Small plasmid bias","Model error","Enum to manage error polymorphism","Error durring error model parsing","Error durring quality model parsing","Quality model not contains minimal cigar string","Cigar string length must be odd","Length model parameter must be upper than 0.0","Identity model parameter must be upper than 0.0","Enum to manage error polymorphism","Error related to command line interface","Error related to model","Manage model","Model to get sequence adapter","Struct to get sequence adapter","Create model from parameter","","","","Model to add error sequence","Struct to load and apply error model","Load model from an stdin","Setup a random error model","Add error to a kmer","Kmer length of model","Add a single random error in a kmer","Model to add glitches sequence","Struct to generate glitches in fragment","Create model from parameter","Get glitch","Model to get read identity","Struct to generate length of fragment","Create model from parameter","Get identity from model","Model to get length of reads","Struct to generate length of fragment","Create model from parameter","Get length from model","Model to generate qscore","Struct to load and apply quality model","Load model from an stdin","Build a random quality score model","Build an ideal quality score model","Generate error associate to a cigar string with odd length","Kmer length of model","A collections of sequence to store reference sequence","Store a reference sequence","","","","","Build a new refrence","A collections of sequence","","","Read a collection of sequence in fasta format from an …","Same as from_stream but small sequence have increase …","Randomly get a reference index and strand according to …","Simulate reads","Manage read description","An enum to represent type of read","","","","Store information about origin of read","","","","","","","","","Store information about read","","","","","","Add error on reads","","","A struct to represent a change in a sequence","Build a new Change warning CIGAR String and edit_distance …","Build a new Change from a begin, end, a change sequence …","Get begin of Change","Get end of change in raw sequence","Get end of change in erroneous sequence","Get erroneous sequence","Get cigar string","Get edit distance","Return true if other is contain in self This function …","Return True if self and Change overlap This function …","Try to merge two Change. This function assume other.begin …","Update alignment info of error","","From identity an seq length compute number of edit","Apply error on read","Create Change correspond to glitches","Add Change correspond to error in changes","Generate fragments","An iterator produce fragment, a description and a seed","Create a new Fragments","Get the read type","Return true fragment must be a chimera","Produce a fragment","Generate quality for simulate","Generate quality string","main simulate function","Get a random base","Get a random base diffrent than nuc","Get random sequencesi":[0,0,0,0,0,0,1,0,2,2,0,3,3,3,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,5,5,5,0,6,0,0,0,0,0,7,7,7,7,7,0,0,8,8,8,8,8,8,0,9,9,0,0,0,10,10,10,10,0,0,11,11,11,11,0,0,0,12,12,0,0,13,13,0,0,14,14,0,0,15,15,15,15,15,0,0,16,16,16,16,16,0,17,17,17,17,17,0,0,0,18,18,18,0,19,19,19,19,19,19,19,19,0,20,20,20,20,20,0,0,0,0,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,0,0,0,0,22,22,22,22,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,9,9,22,18,19,20,21,1,1,2,2,3,3,16,16,18,19,19,20,20,21,21,1,2,3,4,5,6,7,8,9,13,16,18,19,20,21,7,8,9,19,20,1,2,3,9,4,4,5,5,6,6,4,5,6,6,6],"f":[null,[[],["u64",15]],[[]],null,null,null,[[["u64",15]],["u64",15]],null,null,null,null,null,null,null,[[["string",3]],[["result",6],["pathbuf",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i8",15]],[["option",4],["level",4]]],[[["usize",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["f64",15],["u8",15],["vec",3]],["result",6]],[[],[["vec",3],["u8",15]]],[[],[["vec",3],["u8",15]]],[[],["usize",15]],null,null,[[],["result",6]],[[["usize",15]]],[[]],[[],["usize",15]],[[],[["vec",3],["u8",15]]],null,null,[[["f64",15]],[["result",6],["glitch",3]]],[[],["option",4]],null,null,[[["f64",15]],[["identity",3],["result",6]]],[[],["f64",15]],null,null,[[["f64",15]],[["result",6],["length",3]]],[[],["u64",15]],null,null,[[],["result",6]],[[]],[[]],[[],[["result",6],["u8",15]]],[[],["usize",15]],null,null,null,null,null,null,[[["string",3],["bool",15],["box",3]]],null,null,null,[[],["result",6]],[[["bool",15],["length",3]],["result",6]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[["string",3],["usize",15],["char",15]]],[[["usize",15]]],[[["usize",15]]],null,null,null,null,null,[[["usize",15],["origin",3],["option",4],["f64",15]]],null,null,null,null,[[["usize",15],["seq",6]]],[[["usize",15],["seq",6]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["seq",6]],[[],["cigar",6]],[[],["f64",15]],[[["change",3]],["bool",15]],[[["change",3]],["bool",15]],[[["change",3]],["f64",15]],[[]],null,[[["f64",15],["usize",15]],["f64",15]],[[["f64",15],["error",3],["glitch",3]]],[[["changes",6],["glitch",3]]],[[["usize",15],["f64",15],["error",3],["changes",6]]],null,null,[[["references",3],["u64",15],["identity",3],["length",3]]],[[],["readtype",4]],[[],["bool",15]],[[]],null,[[["quality",3]],[["vec",3],["result",6]]],[[["command",3]],["result",6]],[[],["u8",15]],[[["u8",15]],["u8",15]],[[["usize",15]],[["vec",3],["u8",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[["cli",4]]],[[["model",4]]],[[],["option",4]],[[],["readtype",4]],[[],["origin",3]],[[],["description",3]],[[],["change",3]],[[["quantity",3]],["bool",15]],[[["quantity",3]],["bool",15]],[[["duo",3]],["bool",15]],[[["duo",3]],["bool",15]],[[["trio",3]],["bool",15]],[[["trio",3]],["bool",15]],[[["reference",3]],["bool",15]],[[["reference",3]],["bool",15]],[[["readtype",4]],["bool",15]],[[["origin",3]],["bool",15]],[[["origin",3]],["bool",15]],[[["description",3]],["bool",15]],[[["description",3]],["bool",15]],[[["change",3]],["bool",15]],[[["change",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],[["error",8],["option",4]]],[[],["app",3]],[[["app",3]],["app",3]],[[],["app",3]],[[["app",3]],["app",3]],[[],["app",3]],[[["app",3]],["app",3]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["app",3]],["app",3]],[[["option",4]],["option",4]]],"p":[[3,"Quantity"],[3,"Duo"],[3,"Trio"],[3,"Command"],[3,"Command"],[4,"SubCommand"],[4,"Cli"],[4,"Model"],[4,"Error"],[3,"Adapter"],[3,"Error"],[3,"Glitch"],[3,"Identity"],[3,"Length"],[3,"Quality"],[3,"Reference"],[3,"References"],[4,"ReadType"],[3,"Origin"],[3,"Description"],[3,"Change"],[3,"Fragments"]]}\
}');
initSearch(searchIndex);